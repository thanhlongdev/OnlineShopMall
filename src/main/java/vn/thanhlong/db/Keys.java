/*
 * This file is generated by jOOQ.
 */
package vn.thanhlong.db;


import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import vn.thanhlong.db.tables.Catalog;
import vn.thanhlong.db.tables.Customer;
import vn.thanhlong.db.tables.Invoice;
import vn.thanhlong.db.tables.InvoiceDetail;
import vn.thanhlong.db.tables.LoginHistory;
import vn.thanhlong.db.tables.Product;
import vn.thanhlong.db.tables.User;
import vn.thanhlong.db.tables.records.CatalogRecord;
import vn.thanhlong.db.tables.records.CustomerRecord;
import vn.thanhlong.db.tables.records.InvoiceDetailRecord;
import vn.thanhlong.db.tables.records.InvoiceRecord;
import vn.thanhlong.db.tables.records.LoginHistoryRecord;
import vn.thanhlong.db.tables.records.ProductRecord;
import vn.thanhlong.db.tables.records.UserRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>onlineshopmall</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CatalogRecord, Integer> IDENTITY_CATALOG = Identities0.IDENTITY_CATALOG;
    public static final Identity<CustomerRecord, Integer> IDENTITY_CUSTOMER = Identities0.IDENTITY_CUSTOMER;
    public static final Identity<InvoiceRecord, Integer> IDENTITY_INVOICE = Identities0.IDENTITY_INVOICE;
    public static final Identity<LoginHistoryRecord, Integer> IDENTITY_LOGIN_HISTORY = Identities0.IDENTITY_LOGIN_HISTORY;
    public static final Identity<ProductRecord, Integer> IDENTITY_PRODUCT = Identities0.IDENTITY_PRODUCT;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CatalogRecord> KEY_CATALOG_PRIMARY = UniqueKeys0.KEY_CATALOG_PRIMARY;
    public static final UniqueKey<CustomerRecord> KEY_CUSTOMER_PRIMARY = UniqueKeys0.KEY_CUSTOMER_PRIMARY;
    public static final UniqueKey<CustomerRecord> KEY_CUSTOMER_UC_CUSTOMER = UniqueKeys0.KEY_CUSTOMER_UC_CUSTOMER;
    public static final UniqueKey<InvoiceRecord> KEY_INVOICE_PRIMARY = UniqueKeys0.KEY_INVOICE_PRIMARY;
    public static final UniqueKey<InvoiceDetailRecord> KEY_INVOICE_DETAIL_PRIMARY = UniqueKeys0.KEY_INVOICE_DETAIL_PRIMARY;
    public static final UniqueKey<LoginHistoryRecord> KEY_LOGIN_HISTORY_PRIMARY = UniqueKeys0.KEY_LOGIN_HISTORY_PRIMARY;
    public static final UniqueKey<ProductRecord> KEY_PRODUCT_PRIMARY = UniqueKeys0.KEY_PRODUCT_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_UC_USER = UniqueKeys0.KEY_USER_UC_USER;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<InvoiceRecord, CustomerRecord> FK_INVOICE_CUSTOMER = ForeignKeys0.FK_INVOICE_CUSTOMER;
    public static final ForeignKey<InvoiceRecord, UserRecord> FK_INVOICE_USER = ForeignKeys0.FK_INVOICE_USER;
    public static final ForeignKey<InvoiceDetailRecord, InvoiceRecord> FK_INVOICE_DETAIL_INVOICE = ForeignKeys0.FK_INVOICE_DETAIL_INVOICE;
    public static final ForeignKey<InvoiceDetailRecord, ProductRecord> FK_INVOICE_DETAIL_PRODUCT = ForeignKeys0.FK_INVOICE_DETAIL_PRODUCT;
    public static final ForeignKey<LoginHistoryRecord, UserRecord> FK_LOGIN_HISTORY_USER = ForeignKeys0.FK_LOGIN_HISTORY_USER;
    public static final ForeignKey<ProductRecord, CatalogRecord> FK_PRODUCT_CATALOG = ForeignKeys0.FK_PRODUCT_CATALOG;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CatalogRecord, Integer> IDENTITY_CATALOG = Internal.createIdentity(Catalog.CATALOG, Catalog.CATALOG.ID);
        public static Identity<CustomerRecord, Integer> IDENTITY_CUSTOMER = Internal.createIdentity(Customer.CUSTOMER, Customer.CUSTOMER.ID);
        public static Identity<InvoiceRecord, Integer> IDENTITY_INVOICE = Internal.createIdentity(Invoice.INVOICE, Invoice.INVOICE.ID);
        public static Identity<LoginHistoryRecord, Integer> IDENTITY_LOGIN_HISTORY = Internal.createIdentity(LoginHistory.LOGIN_HISTORY, LoginHistory.LOGIN_HISTORY.ID);
        public static Identity<ProductRecord, Integer> IDENTITY_PRODUCT = Internal.createIdentity(Product.PRODUCT, Product.PRODUCT.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CatalogRecord> KEY_CATALOG_PRIMARY = Internal.createUniqueKey(Catalog.CATALOG, "KEY_catalog_PRIMARY", new TableField[] { Catalog.CATALOG.ID }, true);
        public static final UniqueKey<CustomerRecord> KEY_CUSTOMER_PRIMARY = Internal.createUniqueKey(Customer.CUSTOMER, "KEY_customer_PRIMARY", new TableField[] { Customer.CUSTOMER.ID }, true);
        public static final UniqueKey<CustomerRecord> KEY_CUSTOMER_UC_CUSTOMER = Internal.createUniqueKey(Customer.CUSTOMER, "KEY_customer_uc_customer", new TableField[] { Customer.CUSTOMER.EMAIL, Customer.CUSTOMER.PHONE }, true);
        public static final UniqueKey<InvoiceRecord> KEY_INVOICE_PRIMARY = Internal.createUniqueKey(Invoice.INVOICE, "KEY_invoice_PRIMARY", new TableField[] { Invoice.INVOICE.ID }, true);
        public static final UniqueKey<InvoiceDetailRecord> KEY_INVOICE_DETAIL_PRIMARY = Internal.createUniqueKey(InvoiceDetail.INVOICE_DETAIL, "KEY_invoice_detail_PRIMARY", new TableField[] { InvoiceDetail.INVOICE_DETAIL.INVOICE_ID, InvoiceDetail.INVOICE_DETAIL.PRODUCT_ID }, true);
        public static final UniqueKey<LoginHistoryRecord> KEY_LOGIN_HISTORY_PRIMARY = Internal.createUniqueKey(LoginHistory.LOGIN_HISTORY, "KEY_login_history_PRIMARY", new TableField[] { LoginHistory.LOGIN_HISTORY.ID }, true);
        public static final UniqueKey<ProductRecord> KEY_PRODUCT_PRIMARY = Internal.createUniqueKey(Product.PRODUCT, "KEY_product_PRIMARY", new TableField[] { Product.PRODUCT.ID }, true);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, "KEY_user_PRIMARY", new TableField[] { User.USER.USERNAME }, true);
        public static final UniqueKey<UserRecord> KEY_USER_UC_USER = Internal.createUniqueKey(User.USER, "KEY_user_uc_user", new TableField[] { User.USER.EMAIL, User.USER.PHONE }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<InvoiceRecord, CustomerRecord> FK_INVOICE_CUSTOMER = Internal.createForeignKey(Keys.KEY_CUSTOMER_PRIMARY, Invoice.INVOICE, "fk_invoice_customer", new TableField[] { Invoice.INVOICE.CUSTOMER_ID }, true);
        public static final ForeignKey<InvoiceRecord, UserRecord> FK_INVOICE_USER = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, Invoice.INVOICE, "fk_invoice_user", new TableField[] { Invoice.INVOICE.USER_ID }, true);
        public static final ForeignKey<InvoiceDetailRecord, InvoiceRecord> FK_INVOICE_DETAIL_INVOICE = Internal.createForeignKey(Keys.KEY_INVOICE_PRIMARY, InvoiceDetail.INVOICE_DETAIL, "fk_invoice_detail_invoice", new TableField[] { InvoiceDetail.INVOICE_DETAIL.INVOICE_ID }, true);
        public static final ForeignKey<InvoiceDetailRecord, ProductRecord> FK_INVOICE_DETAIL_PRODUCT = Internal.createForeignKey(Keys.KEY_PRODUCT_PRIMARY, InvoiceDetail.INVOICE_DETAIL, "fk_invoice_detail_product", new TableField[] { InvoiceDetail.INVOICE_DETAIL.PRODUCT_ID }, true);
        public static final ForeignKey<LoginHistoryRecord, UserRecord> FK_LOGIN_HISTORY_USER = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, LoginHistory.LOGIN_HISTORY, "fk_login_history_user", new TableField[] { LoginHistory.LOGIN_HISTORY.USERNAME }, true);
        public static final ForeignKey<ProductRecord, CatalogRecord> FK_PRODUCT_CATALOG = Internal.createForeignKey(Keys.KEY_CATALOG_PRIMARY, Product.PRODUCT, "fk_product_catalog", new TableField[] { Product.PRODUCT.CATALOG_ID }, true);
    }
}
