/*
 * This file is generated by jOOQ.
 */
package vn.thanhlong.db.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import vn.thanhlong.db.Keys;
import vn.thanhlong.db.Onlineshopmall;
import vn.thanhlong.db.tables.records.LoginHistoryRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LoginHistory extends TableImpl<LoginHistoryRecord> {

    private static final long serialVersionUID = 2123445898;

    /**
     * The reference instance of <code>onlineshopmall.login_history</code>
     */
    public static final LoginHistory LOGIN_HISTORY = new LoginHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LoginHistoryRecord> getRecordType() {
        return LoginHistoryRecord.class;
    }

    /**
     * The column <code>onlineshopmall.login_history.id</code>.
     */
    public final TableField<LoginHistoryRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>onlineshopmall.login_history.date_login</code>.
     */
    public final TableField<LoginHistoryRecord, Long> DATE_LOGIN = createField(DSL.name("date_login"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>onlineshopmall.login_history.username</code>.
     */
    public final TableField<LoginHistoryRecord, String> USERNAME = createField(DSL.name("username"), org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * Create a <code>onlineshopmall.login_history</code> table reference
     */
    public LoginHistory() {
        this(DSL.name("login_history"), null);
    }

    /**
     * Create an aliased <code>onlineshopmall.login_history</code> table reference
     */
    public LoginHistory(String alias) {
        this(DSL.name(alias), LOGIN_HISTORY);
    }

    /**
     * Create an aliased <code>onlineshopmall.login_history</code> table reference
     */
    public LoginHistory(Name alias) {
        this(alias, LOGIN_HISTORY);
    }

    private LoginHistory(Name alias, Table<LoginHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private LoginHistory(Name alias, Table<LoginHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> LoginHistory(Table<O> child, ForeignKey<O, LoginHistoryRecord> key) {
        super(child, key, LOGIN_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return Onlineshopmall.ONLINESHOPMALL;
    }

    @Override
    public Identity<LoginHistoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_LOGIN_HISTORY;
    }

    @Override
    public UniqueKey<LoginHistoryRecord> getPrimaryKey() {
        return Keys.KEY_LOGIN_HISTORY_PRIMARY;
    }

    @Override
    public List<UniqueKey<LoginHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<LoginHistoryRecord>>asList(Keys.KEY_LOGIN_HISTORY_PRIMARY);
    }

    @Override
    public List<ForeignKey<LoginHistoryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LoginHistoryRecord, ?>>asList(Keys.FK_LOGIN_HISTORY_USER);
    }

    public User user() {
        return new User(this, Keys.FK_LOGIN_HISTORY_USER);
    }

    @Override
    public LoginHistory as(String alias) {
        return new LoginHistory(DSL.name(alias), this);
    }

    @Override
    public LoginHistory as(Name alias) {
        return new LoginHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LoginHistory rename(String name) {
        return new LoginHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LoginHistory rename(Name name) {
        return new LoginHistory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Long, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
