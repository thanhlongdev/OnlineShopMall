/*
 * This file is generated by jOOQ.
 */
package vn.thanhlong.db.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import vn.thanhlong.db.Keys;
import vn.thanhlong.db.Onlineshopmall;
import vn.thanhlong.db.tables.records.InvoiceDetailRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvoiceDetail extends TableImpl<InvoiceDetailRecord> {

    private static final long serialVersionUID = 1071663722;

    /**
     * The reference instance of <code>onlineshopmall.invoice_detail</code>
     */
    public static final InvoiceDetail INVOICE_DETAIL = new InvoiceDetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InvoiceDetailRecord> getRecordType() {
        return InvoiceDetailRecord.class;
    }

    /**
     * The column <code>onlineshopmall.invoice_detail.invoice_id</code>.
     */
    public final TableField<InvoiceDetailRecord, Integer> INVOICE_ID = createField(DSL.name("invoice_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>onlineshopmall.invoice_detail.product_id</code>.
     */
    public final TableField<InvoiceDetailRecord, Integer> PRODUCT_ID = createField(DSL.name("product_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>onlineshopmall.invoice_detail.price</code>.
     */
    public final TableField<InvoiceDetailRecord, BigDecimal> PRICE = createField(DSL.name("price"), org.jooq.impl.SQLDataType.DECIMAL(15, 2).nullable(false), this, "");

    /**
     * The column <code>onlineshopmall.invoice_detail.quanty</code>.
     */
    public final TableField<InvoiceDetailRecord, Integer> QUANTY = createField(DSL.name("quanty"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>onlineshopmall.invoice_detail</code> table reference
     */
    public InvoiceDetail() {
        this(DSL.name("invoice_detail"), null);
    }

    /**
     * Create an aliased <code>onlineshopmall.invoice_detail</code> table reference
     */
    public InvoiceDetail(String alias) {
        this(DSL.name(alias), INVOICE_DETAIL);
    }

    /**
     * Create an aliased <code>onlineshopmall.invoice_detail</code> table reference
     */
    public InvoiceDetail(Name alias) {
        this(alias, INVOICE_DETAIL);
    }

    private InvoiceDetail(Name alias, Table<InvoiceDetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private InvoiceDetail(Name alias, Table<InvoiceDetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> InvoiceDetail(Table<O> child, ForeignKey<O, InvoiceDetailRecord> key) {
        super(child, key, INVOICE_DETAIL);
    }

    @Override
    public Schema getSchema() {
        return Onlineshopmall.ONLINESHOPMALL;
    }

    @Override
    public UniqueKey<InvoiceDetailRecord> getPrimaryKey() {
        return Keys.KEY_INVOICE_DETAIL_PRIMARY;
    }

    @Override
    public List<UniqueKey<InvoiceDetailRecord>> getKeys() {
        return Arrays.<UniqueKey<InvoiceDetailRecord>>asList(Keys.KEY_INVOICE_DETAIL_PRIMARY);
    }

    @Override
    public List<ForeignKey<InvoiceDetailRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InvoiceDetailRecord, ?>>asList(Keys.FK_INVOICE_DETAIL_INVOICE, Keys.FK_INVOICE_DETAIL_PRODUCT);
    }

    public Invoice invoice() {
        return new Invoice(this, Keys.FK_INVOICE_DETAIL_INVOICE);
    }

    public Product product() {
        return new Product(this, Keys.FK_INVOICE_DETAIL_PRODUCT);
    }

    @Override
    public InvoiceDetail as(String alias) {
        return new InvoiceDetail(DSL.name(alias), this);
    }

    @Override
    public InvoiceDetail as(Name alias) {
        return new InvoiceDetail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InvoiceDetail rename(String name) {
        return new InvoiceDetail(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InvoiceDetail rename(Name name) {
        return new InvoiceDetail(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, BigDecimal, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
